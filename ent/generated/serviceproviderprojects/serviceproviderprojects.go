// Code generated by ent, DO NOT EDIT.

package serviceproviderprojects

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the serviceproviderprojects type in the database.
	Label = "service_provider_projects"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldProjectServiceProviderID holds the string denoting the project_service_provider_id field in the database.
	FieldProjectServiceProviderID = "service_provider_id"
	// FieldProjectProjectID holds the string denoting the project_project_id field in the database.
	FieldProjectProjectID = "project_id"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// Table holds the table name of the serviceproviderprojects in the database.
	Table = "service_provider_projects"
)

// Columns holds all SQL columns for serviceproviderprojects fields.
var Columns = []string{
	FieldID,
	FieldCreatedBy,
	FieldProjectServiceProviderID,
	FieldProjectProjectID,
	FieldUpdatedAt,
	FieldCreatedAt,
	FieldUUID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUUID holds the default value on creation for the "uuid" field.
	DefaultUUID func() uuid.UUID
)

// OrderOption defines the ordering options for the ServiceProviderProjects queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedBy orders the results by the created_by field.
func ByCreatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedBy, opts...).ToFunc()
}

// ByProjectServiceProviderID orders the results by the project_service_provider_id field.
func ByProjectServiceProviderID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProjectServiceProviderID, opts...).ToFunc()
}

// ByProjectProjectID orders the results by the project_project_id field.
func ByProjectProjectID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProjectProjectID, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUUID orders the results by the uuid field.
func ByUUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUUID, opts...).ToFunc()
}
