// Code generated by ent, DO NOT EDIT.

package serviceproviderprojects

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/Pyakz/buildbox-api/ent/generated/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLTE(FieldID, id))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldCreatedBy, v))
}

// ProjectServiceProviderID applies equality check predicate on the "project_service_provider_id" field. It's identical to ProjectServiceProviderIDEQ.
func ProjectServiceProviderID(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldProjectServiceProviderID, v))
}

// ProjectProjectID applies equality check predicate on the "project_project_id" field. It's identical to ProjectProjectIDEQ.
func ProjectProjectID(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldProjectProjectID, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldCreatedAt, v))
}

// UUID applies equality check predicate on the "uuid" field. It's identical to UUIDEQ.
func UUID(v uuid.UUID) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldUUID, v))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLTE(FieldCreatedBy, v))
}

// ProjectServiceProviderIDEQ applies the EQ predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDEQ(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldProjectServiceProviderID, v))
}

// ProjectServiceProviderIDNEQ applies the NEQ predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDNEQ(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNEQ(FieldProjectServiceProviderID, v))
}

// ProjectServiceProviderIDIn applies the In predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDIn(vs ...int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIn(FieldProjectServiceProviderID, vs...))
}

// ProjectServiceProviderIDNotIn applies the NotIn predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDNotIn(vs ...int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotIn(FieldProjectServiceProviderID, vs...))
}

// ProjectServiceProviderIDGT applies the GT predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDGT(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGT(FieldProjectServiceProviderID, v))
}

// ProjectServiceProviderIDGTE applies the GTE predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDGTE(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGTE(FieldProjectServiceProviderID, v))
}

// ProjectServiceProviderIDLT applies the LT predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDLT(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLT(FieldProjectServiceProviderID, v))
}

// ProjectServiceProviderIDLTE applies the LTE predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDLTE(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLTE(FieldProjectServiceProviderID, v))
}

// ProjectServiceProviderIDIsNil applies the IsNil predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDIsNil() predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIsNull(FieldProjectServiceProviderID))
}

// ProjectServiceProviderIDNotNil applies the NotNil predicate on the "project_service_provider_id" field.
func ProjectServiceProviderIDNotNil() predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotNull(FieldProjectServiceProviderID))
}

// ProjectProjectIDEQ applies the EQ predicate on the "project_project_id" field.
func ProjectProjectIDEQ(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldProjectProjectID, v))
}

// ProjectProjectIDNEQ applies the NEQ predicate on the "project_project_id" field.
func ProjectProjectIDNEQ(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNEQ(FieldProjectProjectID, v))
}

// ProjectProjectIDIn applies the In predicate on the "project_project_id" field.
func ProjectProjectIDIn(vs ...int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIn(FieldProjectProjectID, vs...))
}

// ProjectProjectIDNotIn applies the NotIn predicate on the "project_project_id" field.
func ProjectProjectIDNotIn(vs ...int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotIn(FieldProjectProjectID, vs...))
}

// ProjectProjectIDGT applies the GT predicate on the "project_project_id" field.
func ProjectProjectIDGT(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGT(FieldProjectProjectID, v))
}

// ProjectProjectIDGTE applies the GTE predicate on the "project_project_id" field.
func ProjectProjectIDGTE(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGTE(FieldProjectProjectID, v))
}

// ProjectProjectIDLT applies the LT predicate on the "project_project_id" field.
func ProjectProjectIDLT(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLT(FieldProjectProjectID, v))
}

// ProjectProjectIDLTE applies the LTE predicate on the "project_project_id" field.
func ProjectProjectIDLTE(v int) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLTE(FieldProjectProjectID, v))
}

// ProjectProjectIDIsNil applies the IsNil predicate on the "project_project_id" field.
func ProjectProjectIDIsNil() predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIsNull(FieldProjectProjectID))
}

// ProjectProjectIDNotNil applies the NotNil predicate on the "project_project_id" field.
func ProjectProjectIDNotNil() predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotNull(FieldProjectProjectID))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotNull(FieldCreatedAt))
}

// UUIDEQ applies the EQ predicate on the "uuid" field.
func UUIDEQ(v uuid.UUID) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldEQ(FieldUUID, v))
}

// UUIDNEQ applies the NEQ predicate on the "uuid" field.
func UUIDNEQ(v uuid.UUID) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNEQ(FieldUUID, v))
}

// UUIDIn applies the In predicate on the "uuid" field.
func UUIDIn(vs ...uuid.UUID) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldIn(FieldUUID, vs...))
}

// UUIDNotIn applies the NotIn predicate on the "uuid" field.
func UUIDNotIn(vs ...uuid.UUID) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldNotIn(FieldUUID, vs...))
}

// UUIDGT applies the GT predicate on the "uuid" field.
func UUIDGT(v uuid.UUID) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGT(FieldUUID, v))
}

// UUIDGTE applies the GTE predicate on the "uuid" field.
func UUIDGTE(v uuid.UUID) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldGTE(FieldUUID, v))
}

// UUIDLT applies the LT predicate on the "uuid" field.
func UUIDLT(v uuid.UUID) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLT(FieldUUID, v))
}

// UUIDLTE applies the LTE predicate on the "uuid" field.
func UUIDLTE(v uuid.UUID) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.FieldLTE(FieldUUID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ServiceProviderProjects) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ServiceProviderProjects) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ServiceProviderProjects) predicate.ServiceProviderProjects {
	return predicate.ServiceProviderProjects(sql.NotPredicates(p))
}
