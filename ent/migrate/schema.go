// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "account_id", Type: field.TypeString},
		{Name: "client_id", Type: field.TypeString, Nullable: true},
		{Name: "manager_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "notes", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"planning", "in_progress", "on_hold", "completed", "cancelled", "delayed", "under_review", "pending_approval", "in_testing", "emergency", "on_schedule", "behind_schedule", "in_review", "archived", "in_negotiation"}, Default: "planning"},
		{Name: "location", Type: field.TypeString, Nullable: true},
		{Name: "budget", Type: field.TypeFloat64, Nullable: true},
		{Name: "deleted", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "account_id", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ProjectsTable,
		UsersTable,
	}
)

func init() {
}
